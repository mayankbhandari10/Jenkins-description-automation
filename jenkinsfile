pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                // Capture the build log into a variable
                script {
                    def buildLog = currentBuild.rawBuild.getLog(10000).reverse().join('\n')

                    // Execute the Python script and pass the build log as a parameter
                    def result = sh(script: "python my_script.py '''${buildLog}'''", returnStatus: true).trim()

                    // Update build description with the result
                    currentBuild.description = "Error: ${result}"
                }
            }
        }
    }

    post {
        always {
            script {
                // Your post-build actions here
            }
        }
    }
}
